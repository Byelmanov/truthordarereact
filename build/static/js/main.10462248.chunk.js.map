{"version":3,"sources":["img/logo-main.png","components/Footer/Footer.js","components/Header/Header.js","components/Players/Players.js","components/Names/Names.js","components/CircleNames/CircleNames.js","components/Circle/Circle.js","components/GameChooseModal/GameChooseModal.js","components/Game/Game.js","components/GameTask/GameTask.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","href","Header","handleClick","props","history","push","src","logo","alt","to","id","onClick","this","Component","WarnMax","show","WarnMin","Players","state","numberOfPlayers","warnMax","warnMin","handleClickFurtherButton","number","setNumberOfPlayers","increaseNumberOfPlayers","parseInt","setState","setTimeout","decreaseNumberOfPlayers","NameItems","items","i","key","type","placeholder","required","Error","error","Names","e","inputs","document","querySelectorAll","forEach","input","value","undefined","preventDefault","namesFromInput","Array","from","map","setNames","console","log","CircleNames","elems","names","name","Circle","arrayOfLines","x","styleForLine","transform","style","GameChooseModal","$","modal","setChooseModal","oneMove","GameTask","componentToRender","handleClickDone","setTaskModal","text","Game","arrayOfNames","arrayOfTruth","tasks","arrayOfDare","truthCounter","length","dareCounter","showChooseModal","showTaskModal","randomPlayer","random","prop","modalState","randomNumber","taskType","taskText","addToEndOfArr","task","handlePlayButton","randomPart","spinTo","Promise","resolve","rotate","duration","complete","then","min","max","Math","floor","array","index","element","splice","window","jQuery","fn","degrees","options","settings","extend","defaults","endDeg","each","el","is","deg","step","now","css","animate","easing","App","setPlayersNames","arrOfNames","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.10462248.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-main.4fedae32.png\";","import React from 'react';\nimport './Footer.sass';\n\n\nfunction Footer() {\n    return (\n        <div className=\"footer\">\n            <h3>The game is developed by <a href=\"mailto:yelmanovbohdan@gmail.com\">Yelmanov Bohdan</a> & designed by <a href=\"mailto:lishchynskayaanna@gmail.com\">Lishchynska Anna</a></h3>\n            <p>For feedback: <a href=\"mailto:lishchynskayaanna@gmail.com\">lishchynskayaanna@gmail.com</a></p>\n        </div>\n    );\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport './Header.sass';\nimport logo from '../../img/logo-main.png';\nimport Footer from '../Footer/Footer.js'\n\nimport {\n    BrowserRouter as Router,\n    Link,\n} from \"react-router-dom\";\n\n\nclass Header extends Component {\n    handleClick = () => {\n        this.props.history.push('/players');\n    }\n    render() {\n        return (\n            <header>\n                <div className=\"container header\">\n                    <div className=\"row justify-content-around\">\n                        <div className=\"col-12 col-lg-6\">\n                            <div className=\"mainLogo\">\n                                <img src={logo} alt=\"Logo\" />\n                            </div>\n                            <h1>Правда <br /> или <br /> действие</h1>\n                        </div>\n                        <div className=\"col-12 col-lg-6\">\n                            <h2>Правила</h2>\n                            <ul className=\"rules\">\n                                <li className=\"rules__item\">Вам должно быть больше 18 лет.</li>\n                                <li className=\"rules__item\">Никто не имеет права заставлять человека играть. Доверяйте друг-другу.</li>\n                                <li className=\"rules__item\">Каждый человек имеет право выйти из игры, если ему станет некомфортно.</li>\n                                <li className=\"rules__item\">Каждый человек имеет право отказаться отвечать на вопрос или выполнять действие.</li>\n                                <li className=\"rules__item\">Перед началом игры согласуйте личные правила, приемлимые лично для Вас.</li>\n                                <li className=\"rules__item\">Выпейте :)</li>\n                            </ul>\n                            <Router>\n                                <Link to=\"/players\" className=\"button__header button\" id=\"headerOkay\" onClick={this.handleClick}>\n                                    Все понятно <span>&#x27F6;</span>\n                                </Link>\n                            </Router>\n\n                        </div>\n\n                    </div>\n\n                </div>\n                <Footer />\n            </header >\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './Players.sass';\nimport logo from '../../img/logo-main.png';\nimport Footer from '../Footer/Footer.js'\n\nimport {\n    Link,\n} from \"react-router-dom\";\n\nfunction WarnMax(props) {\n    if (props.show === false) {\n        return null;\n    }\n\n    return (\n        <div className=\"message message__max\">Максимальное количество игроков: 8</div>\n    )\n}\n\nfunction WarnMin(props) {\n    if (props.show === false) {\n        return null;\n    }\n\n    return (\n        <div className=\"message message__min\">Минимальное количество игроков: 2</div>\n    )\n}\n\nclass Players extends Component {\n    state = {\n        numberOfPlayers: this.props.numberOfPlayers,\n        warnMax: false,\n        warnMin: false,\n    }\n\n    handleClickFurtherButton = () => {\n        let number = this.state.numberOfPlayers;\n        this.props.setNumberOfPlayers(number);\n    }\n\n    increaseNumberOfPlayers = () => {\n        if (this.state.numberOfPlayers < 8) {\n            let number = parseInt(this.state.numberOfPlayers) + 1;\n            this.setState({\n                numberOfPlayers: number,\n            });\n        } else {\n            this.setState({\n                warnMax: true,\n            });\n            setTimeout(() => this.setState({ warnMax: false }), 2000);\n        }\n    }\n    decreaseNumberOfPlayers = () => {\n        if (this.state.numberOfPlayers > 2) {\n            let number = parseInt(this.state.numberOfPlayers) - 1;\n            this.setState({\n                numberOfPlayers: number,\n            });\n        } else {\n            this.setState({\n                warnMin: true,\n            });\n            setTimeout(() => this.setState({ warnMin: false }), 2000);\n        }\n    }\n\n    render() {\n        return (\n            <section className=\"players\">\n                <div className=\"logo\">\n                    <Link to=\"/\">\n                        <img src={logo} alt=\"logo\" />\n                    </Link>\n                </div>\n                <div className=\"playersForm form\">\n                    <h2>Выберите количество игроков</h2>\n                    <div className=\"players__formCounter\">\n                        <div className=\"square\">{this.state.numberOfPlayers}</div>\n                        <div className=\"circle\">\n                            <div className=\"circle__item\" onClick={this.increaseNumberOfPlayers}>&and;</div>\n                            <div className=\"circle__item\" onClick={this.decreaseNumberOfPlayers}>&or;</div>\n                            <WarnMax show={this.state.warnMax} />\n                            <WarnMin show={this.state.warnMin} />\n                        </div>\n                    </div>\n                    <div className=\"form__buttons\">\n                        <Link to=\"/\" className=\"button__back button\"><span>&#x27F5;</span>Назад</Link>\n                        <Link to=\"/names\" className=\"button__further button\" onClick={this.handleClickFurtherButton}>Далее <span>&#x27F6;</span></Link>\n                    </div>\n                </div>\n\n                <Footer />\n            </section>\n        )\n    }\n}\n\n\n\nexport default Players;","import React, { Component } from 'react';\nimport './Names.sass';\nimport logo from '../../img/logo-main.png';\nimport Footer from '../Footer/Footer.js';\nimport {\n    Link,\n} from \"react-router-dom\";\n\nfunction NameItems(props) {\n    let number = props.numberOfPlayers;\n    let items = [number];\n    for (let i = 0; i < number; i++) {\n        items[i] = (\n            <div className=\"names__fieldItem\" key={i + 1}>\n                <div className=\"circle__item\">{i + 1}</div>\n                <input type=\"text\" placeholder={\"Игрок \" + (i + 1)} required=\"required\" className=\"names__input\" />\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            {items}\n        </div>\n\n    )\n}\n\nfunction Error(props) {\n    if (!props.error) {\n        return null;\n    } else {\n        return (\n            <div className=\"button__error\">Заполните все поля</div>\n        )\n    }\n}\n\n\nclass Names extends Component {\n    state = {\n        numberOfPlayers: this.props.numberOfPlayers,\n        error: false,\n    }\n    handleClickFurtherButton = (e) => {\n        let inputs = document.querySelectorAll('.names__input');\n        let error = false;\n        inputs.forEach(input => {\n            if (input.value === \"\" || input.value === null || input.value === undefined) {\n                e.preventDefault();\n                this.setState({\n                    error: true,\n                });\n                error = true;\n                setTimeout(() => { this.setState({ error: false }) }, 5000)\n            }\n        });\n\n        if (error === false) {\n            try {\n                let inputsArray = Array.from(inputs);\n                let namesFromInput = inputsArray.map(input => input.value);\n                this.props.setNames(namesFromInput);\n            } catch (e) {\n                console.log(e);\n            }\n\n        }\n\n\n    }\n    render() {\n        return (\n            <section className=\"names\">\n                <div className=\"logo\">\n                    <Link to=\"/\">\n                        <img src={logo} alt=\"logo\" />\n                    </Link>\n                </div>\n                <div className=\"form\">\n                    <h2>Введите имена игроков</h2>\n\n                    <NameItems numberOfPlayers={this.state.numberOfPlayers} />\n\n                    <div className=\"form__buttons\">\n                        <Link to=\"/players\" className=\"button__back button\"><span>&#x27F5;</span>Назад</Link>\n                        <Link to=\"/game\" className=\"button__further button\" onClick={this.handleClickFurtherButton}>Далее <span>&#x27F6;</span></Link>\n                        <Error error={this.state.error} />\n                    </div>\n                </div>\n\n\n\n                <Footer />\n            </section>\n\n\n        )\n    }\n}\n\nexport default Names;","import React from 'react'\nimport './CircleNames.sass'\n\nfunction CircleNames(props) {\n    let numberOfPlayers = props.number;\n    let arrayOfNames = Array.from(props.names);\n\n    let elems = arrayOfNames.map((name, i) =>\n        <p className={`circle__name circle__name${i + 1}`} key={i}>{name}</p>\n    );\n\n\n    return (\n        <div className={`circle__names circle__names--${numberOfPlayers}`}>\n            {elems}\n        </div>\n    )\n}\n\n\nexport default CircleNames;","import React from 'react';\nimport './Circle.sass'\nimport CircleNames from '../CircleNames/CircleNames.js'\n\nfunction Circle(props) {\n    let numberOfPlayers = props.number;\n    let arrayOfLines = [];\n    for (let i = 0, x = 0; i < numberOfPlayers; i++ , x += 360 / numberOfPlayers) {\n        let styleForLine = {\n            transform: \"rotate(\" + x + \"deg)\",\n        };\n        arrayOfLines[i] = (\n            <div className=\"playArea__circleLine\" key={i} style={styleForLine}>\n                <div className=\"hidden\"></div>\n                <div className=\"shown\"></div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"playArea__circle\">\n            {arrayOfLines}\n            <div className=\"arrow\" id=\"arrow\"></div>\n            <CircleNames number={numberOfPlayers} names={props.names} />\n        </div>\n    )\n\n}\n\n\n\nexport default Circle;","import React from 'react';\nimport './GameChooseModal.sass'\n\n\nfunction GameChooseModal(props) {\n    if (!props.modal) {\n        return null;\n\n    } else {\n        function handleSkip() {\n            props.setChooseModal(false);\n            props.oneMove(false);\n        }\n        function handleTruth() {\n            props.setChooseModal(false);\n            props.oneMove('truth');\n        }\n        function handleDare() {\n            props.setChooseModal(false);\n            props.oneMove('dare');\n        }\n        return (\n            <div className=\"playArea__modalChoose\">\n                <h2 className=\"playArea__chooseText\">{props.name},выберите</h2>\n                <div className=\"playArea__chooseButtonWrap\">\n                    <div className=\"playArea__chooseButton\" onClick={handleTruth}>Правда</div>\n                    <div className=\"playArea__chooseButton\" onClick={handleDare}>Действие</div>\n                </div>\n                <div className=\"playArea__skipButton\" onClick={handleSkip}>Пропустить</div>\n            </div>\n        )\n    }\n\n\n}\n\nexport default GameChooseModal;","import React, { Component } from 'react';\nimport './Game.sass';\nimport logo from '../../img/logo-main.png';\nimport {\n    Link\n} from \"react-router-dom\";\nimport Circle from '../Circle/Circle.js';\nimport GameChooseModal from '../GameChooseModal/GameChooseModal.js';\nimport GameTask from '../GameTask/GameTask.js'\n\nimport $ from 'jquery';\nimport jQuery from 'jquery';\nimport * as tasks from './tasks.json';\n\n\nclass Game extends Component {\n    arrayOfNames = Array.from(this.props.names);\n    numberOfPlayers = this.props.numberOfPlayers;\n\n    arrayOfTruth = Array.from(tasks.arrayOfTrue);\n    arrayOfDare = Array.from(tasks.arrayOfAction);\n\n    truthCounter = this.arrayOfTruth.length;\n    dareCounter = this.arrayOfDare.length;\n\n    taskType;\n    taskText;\n\n    state = {\n        showChooseModal: false,\n        showTaskModal: false,\n        randomPlayer: random(0, this.numberOfPlayers - 1),\n    }\n\n    oneMove = (prop) => {\n        let modalState = prop;\n        if (modalState === 'truth') {\n            let randomNumber = random(0, this.truthCounter);\n            this.taskType = 'Правда';\n            this.taskText = this.arrayOfTruth[randomNumber];\n            this.truthCounter = this.truthCounter === 0 ? this.arrayOfTruth.length : --(this.truthCounter);\n\n            this.arrayOfTruth = addToEndOfArr(this.arrayOfTruth, randomNumber);\n\n            this.setState({\n                showTaskModal: 'truth',\n                randomPlayer: random(0, this.numberOfPlayers - 1)\n            });\n\n        } else if (modalState === 'dare') {\n            let randomNumber = random(0, this.dareCounter);\n            this.taskType = 'Действие';\n            this.taskText = this.arrayOfDare[randomNumber];\n            this.dareCounter = this.dareCounter === 0 ? this.arrayOfDare.length : --(this.dareCounter);\n\n            this.arrayOfDare = addToEndOfArr(this.arrayOfDare, randomNumber);\n\n            this.setState({\n                showTaskModal: 'dare',\n                randomPlayer: random(0, this.numberOfPlayers - 1)\n            });\n        } else {\n            this.setState({\n                showTaskModal: false,\n                randomPlayer: random(0, this.numberOfPlayers - 1)\n            });\n        }\n    }\n\n    setTaskModal = (task) => {\n        this.setState({\n            showTaskModal: task\n        });\n    }\n\n    setChooseModal = (prop) => {\n        this.setState({\n            showChooseModal: prop\n        });\n    }\n\n    handlePlayButton = () => {\n        let randomPlayer = this.state.randomPlayer;\n        let randomPart = random(0, (360 / this.numberOfPlayers));\n        let spinTo = 1080 + (randomPlayer * 360 / this.numberOfPlayers) + randomPart;\n\n        new Promise((resolve) => {\n            $('#arrow').rotate(spinTo, {\n                duration: 4000,\n                complete: () => (resolve())\n            });\n        }).then(() => {\n            this.setState({\n                showChooseModal: true\n            });\n            return new Promise((resolve) => {\n                setTimeout(() => resolve(), 1500);\n            });\n        }).then(() => {\n            $(\"#arrow\").rotate(-(spinTo - 1080));\n        });\n    }\n\n    render() {\n        return (\n            <section className=\"playArea\">\n                <div className=\"playArea__playButton\" onClick={this.handlePlayButton}>Крутить</div>\n                <Circle number={this.numberOfPlayers} names={this.arrayOfNames} />\n\n                <GameChooseModal name={this.arrayOfNames[this.state.randomPlayer]} modal={this.state.showChooseModal} setChooseModal={this.setChooseModal} oneMove={this.oneMove} />\n\n                <GameTask modal={this.state.showTaskModal} type={this.taskType} text={this.taskText} setTaskModal={this.setTaskModal} />\n\n                <Link to=\"/\" className=\"playArea__exitButton exit\">меню</Link>\n                <img src={logo} alt=\"logo\" className=\"playArea__logo\" />\n\n            </section>\n        )\n    }\n}\n\nfunction random(min, max) {\n    if (min < max) {\n        return Math.floor(Math.random() * (++max - min) + min);\n    } else {\n        return Math.floor(Math.random() * (++min - max) + max);\n    }\n}\n\nfunction addToEndOfArr(array, index) {\n    let element = array.splice(index, 1);\n    array.push(element[0]);\n    return array;\n}\n\n; (function (window, $) {\n\n    $.fn.rotate = function (degrees, options) {\n\n        var settings = $.extend({}, $.fn.rotate.defaults, options),\n            endDeg = 0;\n\n        degrees = degrees || $.fn.rotate.degrees;\n\n        return this.each(function (i, el) {\n            if ($(el).is(':animated')) { return; }\n\n            endDeg = (el.deg || endDeg) + degrees;\n            settings.step = function (now) {\n                $(el).css('transform', 'rotate(' + now + 'deg)');\n            };\n\n            $(el).animate({ deg: endDeg }, settings);\n        });\n\n    };\n\n    $.fn.rotate.degrees = 360;\n\n    $.fn.rotate.defaults = {\n        duration: 1000,\n        easing: 'swing',\n        complete: function () { }\n    };\n\n\n})(window, jQuery);\n\n\nexport default Game;","import React, { Component } from 'react'\nimport './GameTask.sass'\n\n\nclass GameTask extends Component {\n\n    componentToRender = null;\n\n    handleClickDone = () => {\n        this.props.setTaskModal(false);\n    }\n\n    render() {\n        if (this.props.modal) {\n            this.componentToRender = (\n                <div className=\"playArea__card\" >\n                    <h2>{this.props.type}</h2>\n                    <p>{this.props.text}</p>\n                    <button className=\"doneButton\" onClick={this.handleClickDone}>OK <span>&#x27f6;</span></button>\n                </div>\n            );\n        } else {\n            this.componentToRender = null;\n        }\n        return (\n            <div>\n                {this.componentToRender}\n            </div>\n\n        )\n    }\n}\n\n\nexport default GameTask;","import React, { Component } from 'react';\nimport './App.sass';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport Header from './components/Header/Header.js';\nimport Players from './components/Players/Players.js';\nimport Names from './components/Names/Names.js';\nimport Game from './components/Game/Game.js';\n\n\n\n\nclass App extends Component {\n\n    state = {\n        numberOfPlayers: '2',\n        names: [],\n    }\n\n    setNumberOfPlayers = number => {\n        this.setState({\n            numberOfPlayers: number,\n        });\n    }\n\n    setPlayersNames = arrOfNames => {\n        this.setState({\n            names: arrOfNames,\n        })\n    }\n\n    render() {\n        return (\n\n            <Router>\n\n                <Switch>\n                    <Route exact path=\"/\" component={Header} />\n                    <Route exact path=\"/players\">\n                        <Players setNumberOfPlayers={this.setNumberOfPlayers} numberOfPlayers={this.state.numberOfPlayers} />\n                    </Route>\n                    <Route exact path=\"/names\">\n                        <Names numberOfPlayers={this.state.numberOfPlayers} setNames={this.setPlayersNames} />\n                    </Route>\n                    <Route exact path=\"/game\">\n                        <Game names={this.state.names} numberOfPlayers={this.state.numberOfPlayers} />\n                    </Route>\n                </Switch>\n\n\n\n\n\n            </Router>\n\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}